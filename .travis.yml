os:
   - linux
     #- osx

dist: bionic

osx_image: xcode11

language: c

arch:
  - amd64

addons:
   apt:
      sources:
         - ubuntu-toolchain-r-test
         - sourceline: deb https://apt.kitware.com/ubuntu/ bionic main
           key_url: https://apt.kitware.com/keys/kitware-archive-latest.asc
      packages:
         - gfortran-9
         - gfortran-10
         - g++-9
         - g++-10
         - libgfortran5-dbg
         - libxml2-utils
         - cmake
   homebrew:
      packages:
         - gcc@10
         - cmake
      update: true

env:
   jobs:
      - FC='gfortran-9' CC='gcc-9' CXX='g++-9'  CACHE_NAME=$TRAVIS_OS_NAME-$TRAVIS_CPU_ARCH-$FC
      - FC='gfortran-10' CC='gcc-10' CXX='g++-10' CACHE_NAME=$TRAVIS_OS_NAME-$TRAVIS_CPU_ARCH-$FC

# caching of the whole `local` directory. Can't cache only the one for this
# `env`, because otherwise the different instances will overwrite the cache.
# For the first test-run, the build has to be run sequentially (limit parallel
# workers to 1) so that the cache can be correctly initialized. Once the cache
# is build, parallel workers can be re-enabled.
cache:
   directories:
      - ${HOME}/local
   timeout: 600

before_script:
   # Install cmake on linux (assume osx is good)
   - |
      if [ $TRAVIS_OS_NAME != 'osx' ] ; then
         export cmake_ver=3.18.1
         sh ./tools/travis-install-cmake.sh ${cmake_ver}
         # set up cmake location
         export PATH=${HOME}/local/cmake/bin:${PATH}
         export LIBRARY_PATH=${HOME}/local/cmake/lib:${LIBRARY_PATH}
         export LD_LIBRARY_PATH=${HOME}/local/cmake/lib:${LD_LIBRARY_PATH}
         # print out version information
         sudo apt purge --autoremove cmake
         cmake --version
      else
         cmake --version
      fi
   # Install GFE dependencies
   - |
      ${FC} --version
      bash ./tools/travis-install-pfunit.bash
   # Now build pFlogger
   - cd ${TRAVIS_BUILD_DIR}
   - mkdir -p build && cd build
   - cmake .. -DCMAKE_Fortran_COMPILER=${FC} -DCMAKE_INSTALL_PREFIX=${HOME}/Software/gFTL -DCMAKE_PREFIX_PATH=${HOME}/Software/GFE

script:
   # Build
   - make -j$(nproc) VERBOSE=1
   # Make tests
   - make -j$(nproc) tests
   # Run tests
   - ctest -j $(nproc) --output-on-failure

notifications:
   email:
      recipients:
         - matthew.thompson@nasa.gov
         - tom.clune@nasa.gov
